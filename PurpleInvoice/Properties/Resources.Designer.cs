//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PurpleInvoice.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PurpleInvoice.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap collapse_arrow {
            get {
                object obj = ResourceManager.GetObject("collapse_arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE purple;
        ///
        ///SELECT DATE_FORMAT(DATE(starttime),&apos;%d/%m/%Y&apos;) AS `DATE`,
        ///COUNT(*) AS CallCount,
        ///ROUND(SUM(durationsec)/60, 2) AS ActualDuration,
        ///ROUND(SUM(Duration1)/60, 2) AS BilledDuration
        ///
        ///FROM cdrloaded
        ///WHERE calldirection = 1
        ///	AND starttime &gt;= @StartDate
        ///	AND starttime &lt; @EndDate
        ///	AND customerid = @ClientID
        ///
        ///GROUP BY customerid, DATE(starttime);.
        /// </summary>
        internal static string DomesticInvoice {
            get {
                return ResourceManager.GetString("DomesticInvoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE purple;
        ///SELECT c.partnername AS `ANS`, SUM(callcount) AS `TotalCallCount`,
        ///       SUM(actualduration) AS `Total Actual Duration`,
        ///       SUM(billedduration) AS &apos;Total Billed Duration&apos;, &apos;0.04&apos; AS &apos;Rate&apos;,
        ///	   (SUM(billedduration) * 0.04) AS &apos;Amount&apos;,
        ///       (SUM(billedduration) * 0.04 * 0.15) AS &apos;Vat&apos;,
        ///       ((SUM(billedduration) * 0.04 * 0.15) + (SUM(billedduration) * 0.04)) AS &apos;Invoice&apos;
        ///FROM
        ///(
        ///	SELECT customerid,supplierid,DATE_FORMAT(DATE(starttime), &apos;%d/%m/%Y&apos;) 
        ///		`Date`, COUNT(*) AS CallCo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DomesticSummary {
            get {
                return ResourceManager.GetString("DomesticSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use purple; select c.partnername as `ANS`,sum(CallCount) as `Total Call Count` ,sum(ActualDuration) as `Total Actual Duration` ,sum(BilledDuration) as &apos;Total Billed Duration&apos; ,&apos;0.04&apos; as &apos;Rate&apos; ,(sum(BilledDuration) * 0.04 ) as &apos;Amount&apos;,(sum(BilledDuration) * 0.04*0.15) as &apos;Vat&apos; ,((sum(BilledDuration) * 0.04*0.15)+(sum(BilledDuration) * 0.04 )) as &apos;Invoice&apos; from ( select customerid,supplierid, DATE_FORMAT(date(starttime),&apos;%d/%m/%Y&apos;) `Date`,Count(*) as CallCount,sum(durationsec)/60 ActualDuration, sum(case wh [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InernationalIncomingSummary {
            get {
                return ResourceManager.GetString("InernationalIncomingSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE purple;
        ///
        ///SELECT DATE_FORMAT(DATE(starttime),&apos;%d/%m/%Y&apos;) AS `DATE`,
        ///COUNT(*) AS CallCount,
        ///ROUND(SUM(durationsec)/60, 2) AS ActualDuration,
        ///ROUND(SUM(Duration1)/60, 2) AS BilledDuration
        ///
        ///FROM cdrloaded
        ///WHERE calldirection = 3
        ///	AND starttime &gt;= @StartDate
        ///	AND starttime &lt; @EndDate
        ///	AND customerid = @ClientID
        ///
        ///GROUP BY DATE(starttime);.
        /// </summary>
        internal static string InternationalIncomingInvoice {
            get {
                return ResourceManager.GetString("InternationalIncomingInvoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE purple;
        ///
        ///SELECT p.PartnerName AS ANS,
        ///p1.PartnerName AS IGW,
        ///COUNT(*) AS CallCount,
        ///ROUND(SUM(cdr.durationsec) / 60, 2) AS ActualDuration,
        ///ROUND(SUM(cdr.roundedduration) / 60, 2) AS BilledDuration,
        ///ROUND(SUM(SubscriberChargeXOut), 2) AS SubscriberChargeXBDT,
        ///ROUND(SUM(CarrierCostYigwout), 2) AS CarrierCostYUSD
        ///
        ///FROM cdrloaded AS cdr
        ///LEFT JOIN partner AS p ON (cdr.customerid = p.idpartner)
        ///LEFT JOIN partner p1 ON (cdr.SupplierID = p1.idPartner)
        ///
        ///WHERE calldirection = 2
        ///	AND starttime &gt;= @StartDate
        ///	AND s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InternationalOutgoingInvoice {
            get {
                return ResourceManager.GetString("InternationalOutgoingInvoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT cr.partnername AS ANS,
        ///SUM(callcount) AS `SumofNoOfCalls`,
        ///SUM(ROUND(ActualDuration,2)) AS `SumofActualDuration`,
        ///SUM(ROUND(RoundedDuration,2)) AS `SumofBilledDurationMinutes`,
        ///SUM(ROUND(X,2)) AS &apos;SumofX&apos;,
        ///SUM(ROUND(Y,6)) AS &apos;SumofY&apos;,
        ///(SELECT 79.0) AS &apos;USDRate&apos;, 
        ///SUM(ROUND(Y*79.0,2)) AS &apos;SumofY&apos;,
        ///SUM(ROUND(x-79.0*y,2)) AS &apos;SumofZ&apos;,
        ///SUM(ROUND(0.15*(x-79.0*y),2)) AS &apos;SumofICXRevenue&apos;
        ///
        ///FROM
        ///(
        ///	SELECT DATE(starttime) AS &apos;Date&apos;,
        ///	customerid,
        ///	COUNT(*) AS CallCount,
        ///	matchedprefixy,
        ///	SUM(d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InternationalOutgoingSummary {
            get {
                return ResourceManager.GetString("InternationalOutgoingSummary", resourceCulture);
            }
        }
    }
}
